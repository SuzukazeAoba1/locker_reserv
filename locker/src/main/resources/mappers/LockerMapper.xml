<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.globalin.locker.mapper.LockerMapper">

    <!-- ResultMap -->
    <resultMap id="LockerResultMap" type="com.globalin.locker.domain.Locker">
        <result property="lockerCode" column="LOCKER_CODE"/>
        <result property="location"  column="LOCATION"/>
        <result property="x"         column="X"/>
        <result property="y"         column="Y"/>
        <result property="capacity"  column="CAPACITY"/>
        <result property="price"     column="PRICE"/>
        <result property="status"    column="STATUS"/>
        <result property="createdAt" column="CREATED_AT"/>
    </resultMap>

    <!-- 공통 컬럼 목록 -->
    <sql id="Locker_Columns">
        LOCKER_CODE, LOCATION, X, Y, CAPACITY, PRICE, STATUS, CREATED_AT
    </sql>

    <!-- Read: 전체 -->
    <select id="selectAll" resultMap="LockerResultMap">
        SELECT <include refid="Locker_Columns"/>
        FROM LOCKERS
        ORDER BY LOCKER_CODE
    </select>

    <!-- Read: 위치 기반 (x 오름차순, y 오름차순) -->
    <select id="selectByLocation"
            parameterType="string"
            resultMap="LockerResultMap">
        SELECT <include refid="Locker_Columns"/>
        FROM LOCKERS
        WHERE LOCATION = #{location}
        ORDER BY LOCKER_CODE
    </select>

    <!-- Read: code 기반 -->
    <select id="selectByCode" parameterType="long" resultMap="LockerResultMap">
        SELECT <include refid="Locker_Columns"/>
        FROM LOCKERS
        WHERE LOCKER_CODE = #{lockerCode}
    </select>

    <!-- LOCKERS.STATUS 전용 통합 업데이트 -->
    <update id="updateLockerStatus" parameterType="map">
        UPDATE LOCKERS l
        SET l.STATUS = #{toStatus}
        WHERE l.LOCKER_CODE = #{lockerCode}
        <if test="fromStatus != null">
            AND l.STATUS = #{fromStatus}
        </if>
        <if test="requireNoActive == true">
            AND NOT EXISTS (
            SELECT 1 FROM RENTALS r
            WHERE r.LOCKER_CODE = l.LOCKER_CODE
            AND r.STATUS IN (1,2)
            )
        </if>
    </update>

    <!-- 상태 전환 토클 (사용 가능 <-> 수리 중) -->
    <update id="toggleAvailability" parameterType="long">
        UPDATE LOCKERS
        SET STATUS = CASE WHEN STATUS = 1 THEN 4
        WHEN STATUS = 4 THEN 1
        END
        WHERE LOCKER_CODE = #{lockerCode}
        AND STATUS IN (1, 4)
    </update>

    <!-- Read: 페이징 (Oracle 12c+) -->
    <select id="selectPage" resultMap="LockerResultMap">
        SELECT <include refid="Locker_Columns"/>
        FROM LOCKERS
        ORDER BY ID DESC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>

    <!-- Create: IDENTITY + DEFAULT CURRENT_TIMESTAMP 사용 -->
    <insert id="insert"
            parameterType="com.globalin.locker.domain.Locker"
            useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        INSERT INTO LOCKERS (LOCATION, X, Y, CAPACITY, PRICE, STATUS)
        VALUES (#{location}, #{x}, #{y}, #{capacity}, #{price}, #{status})
    </insert>

    <!-- 코드 기반 상태 업데이트 -->
    <update id="updateLockerByCode" parameterType="com.globalin.locker.domain.Locker">
        UPDATE LOCKERS
        SET LOCATION=#{location}, X=#{x}, Y=#{y}, CAPACITY=#{capacity}, STATUS=#{status}
        WHERE LOCKER_CODE = #{lockerCode}
    </update>

    <!-- Delete: 물리 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM LOCKERS WHERE ID = #{id}
    </delete>

</mapper>
